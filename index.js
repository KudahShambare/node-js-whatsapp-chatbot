const express = require("express");
const cors = require("cors");
const { Client, MessageMedia } = require('whatsapp-web.js');
const qrcode = require('qrcode-terminal');
const  fetch  = require("node-fetch");
const cheerio = require("cheerio");
const pdfkit  = require("pdfkit");
const fs  = require("fs");




const app = express();
app.use(cors());



	const client = new Client();

client.on('qr', (qr) => {
    // Generate and scan this code with your phone
     qrcode.generate(qr, {small: true});
   // console.log('QR RECEIVED', qr);
});

client.on('ready', () => {
    console.log('Client is ready!');
});

client.on('message', async (msg) => {

	let contact = await msg.getContact();

console.log(contact.pushname)

	if(msg.type == "chat"){


		  scrap(msg.body).then((responseArr)=>{
  
  	let arr = responseArr;
   arr.filter((elem)=>{
  		return elem !== " ";
  	})

createPDF(arr,contact.pushname);

let senderSFile =  MessageMedia.fromFilePath(__dirname+"/output.pdf");

 	 msg.reply(senderSFile);


});

	} 


})

client.initialize();



/***************************************/

const scrap= async(data) =>{
	try{
		const url = `https://en.wikipedia.org/wiki/${data}`;

		console.log(url)
		const feching =await fetch(url);
		const body = await feching.text();
		
	const cheerioLoad = await cheerio.load(body);
	const heading=cheerioLoad("h1").text();
const result = cheerioLoad("p").text();


const paragraphs =result.split("\n");
paragraphs.push(heading);

return paragraphs;


}
catch(err){
	console.error(err)
}

}

const createPDF = (arr,userName)=>{

const fileHead=arr[arr.length-1];
	console.log(fileHead);

	arr.pop();


	const pdfFile= new pdfkit();


pdfFile.pipe(fs.createWriteStream('./output.pdf', { flags: 'w' }));

let intr = `Hello ${userName}. This document has been automatically generated by the BWC-1 Engine. For more information visit, https://github.com/KudahShambare/node-js-whatsapp-chatbot\n`;


	pdfFile.text(intr,{paragraphGap:30})


//HEADING
	pdfFile.fontSize(20).text(fileHead,{paragraphGap:35,align:"center"}).fontSize(13);

	//PARAGRAPHS
	arr.map((para)=>{
		return 	pdfFile.text(para,{paragraphGap:30})
	})



setTimeout(()=>{
pdfFile.end();


},5000);


}







const PORT = 9000;

app.listen(PORT,()=>{
	console.log("App listening to Port ", PORT);
})